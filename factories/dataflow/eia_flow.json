{
	"name": "eia_flow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "eia_response_JSON",
						"type": "DatasetReference"
					},
					"name": "eiaJSON"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "eia_staging",
						"type": "DatasetReference"
					},
					"name": "eiaSQL"
				}
			],
			"transformations": [
				{
					"name": "flattenJSON",
					"description": "flatten to response data"
				}
			],
			"scriptLines": [
				"source(output(",
				"          apiVersion as string,",
				"          request as (command as string, params as (api_key as string, data as string[], end as string, facets as (respondent as string[]), frequency as string, length as short, offset as integer, sort as (column as string, direction as string)[], start as string)),",
				"          response as (data as (fueltype as string, period as string, respondent as string, {respondent-name} as string, {type-name} as string, value as short, {value-units} as string)[], dateFormat as string, description as string, frequency as string, total as integer, warnings as (description as string, warning as string)[])",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false,",
				"     rowUrlColumn: 'MDSourceFile',",
				"     documentForm: 'documentPerLine',",
				"     wildcardPaths:['*.json']) ~> eiaJSON",
				"eiaJSON foldDown(unroll(response.data),",
				"     mapColumn(",
				"          fueltype = response.data.fueltype,",
				"          period = response.data.period,",
				"          respondent = response.data.respondent,",
				"          {respondent-name} = response.data.{respondent-name},",
				"          {type-name} = response.data.{type-name},",
				"          value = response.data.value,",
				"          {value-units} = response.data.{value-units}",
				"     ),",
				"     partitionBy('hash', 1),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flattenJSON",
				"flattenJSON sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['gainesvilleeiaTEST'],",
				"     truncate: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1),",
				"     format: 'table') ~> eiaSQL"
			]
		}
	}
}