{
	"name": "openmeteo_flow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "openmeteo_reponse_JSON",
						"type": "DatasetReference"
					},
					"name": "openmeteoJSON"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "selectall"
				},
				{
					"name": "flattencloudcover"
				},
				{
					"name": "flatten5"
				},
				{
					"name": "flatten6"
				}
			],
			"scriptLines": [
				"source(output(",
				"          elevation as double,",
				"          generationtime_ms as double,",
				"          hourly as (cloudcover as short[], direct_normal_irradiance as double[], precipitation as double[], temperature_2m as double[], time as string[], windspeed_10m as double[]),",
				"          hourly_units as (cloudcover as string, direct_normal_irradiance as string, precipitation as string, temperature_2m as string, time as string, windspeed_10m as string),",
				"          latitude as double,",
				"          longitude as double,",
				"          timezone as string,",
				"          timezone_abbreviation as string,",
				"          utc_offset_seconds as boolean",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     rowUrlColumn: 'MDFileName',",
				"     documentForm: 'documentPerLine',",
				"     wildcardPaths:['*.json']) ~> openmeteoJSON",
				"openmeteoJSON select(mapColumn(",
				"          cloudcover = hourly.cloudcover,",
				"          direct_normal_irradiance = hourly.direct_normal_irradiance,",
				"          precipitation = hourly.precipitation,",
				"          temperature_2m = hourly.temperature_2m,",
				"          time = hourly.time,",
				"          windspeed_10m = hourly.windspeed_10m,",
				"          MDFileName,",
				"          longitude,",
				"          latitude",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectall",
				"selectall foldDown(unroll(cloudcover),",
				"     mapColumn(",
				"          cloudcover,",
				"          direct_normal_irradiance,",
				"          precipitation,",
				"          temperature_2m,",
				"          time,",
				"          windspeed_10m",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flattencloudcover",
				"flattencloudcover foldDown(unroll(time),",
				"     mapColumn(",
				"          cloudcover,",
				"          direct_normal_irradiance,",
				"          precipitation,",
				"          temperature_2m,",
				"          time,",
				"          windspeed_10m",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten5",
				"flatten5 foldDown(unroll(windspeed_10m),",
				"     mapColumn(",
				"          cloudcover,",
				"          direct_normal_irradiance,",
				"          precipitation,",
				"          temperature_2m,",
				"          time,",
				"          windspeed_10m",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten6"
			]
		}
	}
}