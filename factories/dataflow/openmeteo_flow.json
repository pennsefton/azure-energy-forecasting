{
	"name": "openmeteo_flow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "openmeteo_reponse_JSON",
						"type": "DatasetReference"
					},
					"name": "openmeteoCloudcover"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "selectCloudcover"
				},
				{
					"name": "flattenCloudcover"
				}
			],
			"scriptLines": [
				"source(output(",
				"          elevation as double,",
				"          generationtime_ms as double,",
				"          hourly as (cloudcover as short[], direct_normal_irradiance as double[], precipitation as double[], temperature_2m as double[], time as string[], windspeed_10m as double[]),",
				"          hourly_units as (cloudcover as string, direct_normal_irradiance as string, precipitation as string, temperature_2m as string, time as string, windspeed_10m as string),",
				"          latitude as double,",
				"          longitude as double,",
				"          timezone as string,",
				"          timezone_abbreviation as string,",
				"          utc_offset_seconds as boolean",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine',",
				"     wildcardPaths:['Gainesville_*.json']) ~> openmeteoCloudcover",
				"openmeteoCloudcover select(mapColumn(",
				"          cloudcover = hourly.cloudcover,",
				"          time = hourly.time",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectCloudcover",
				"selectCloudcover foldDown(unrollMultiple(cloudcover,time,direct_normal_irradiance),",
				"     mapColumn(",
				"          time,",
				"          cloudcover,",
				"          direct_normal_irradiance",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flattenCloudcover"
			]
		}
	}
}